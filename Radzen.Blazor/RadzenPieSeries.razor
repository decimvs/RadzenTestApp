@using Radzen.Blazor.Rendering
@typeparam TItem
@inherits Radzen.Blazor.CartesianSeries<TItem>

<CascadingValue Value="@this">
  @ChildContent
</CascadingValue>

@code {
    public override CoordinateSystem CoordinateSystem => CoordinateSystem.Polar;

    public override RenderFragment Render(ScaleBase categoryScale, ScaleBase valueScale)
    {
        var className = $"rz-pie-series rz-series-{Chart.Series.IndexOf(this)}";
        var x = CenterX;
        var y = CenterY;
        var radius = CurrentRadius;

        return
        @<g class="@className">
            @if (PositiveItems.Any())
                {
                    var sum = PositiveItems.Sum(Value);

                    double startAngle = -90;

                @foreach (var data in PositiveItems)
                    {
                        var value = Value(data);
                        var angle = sum == 0 ? 0 : (value / sum) * 360;
                        var endAngle = startAngle + angle;

                        var d = Segment(x, y, radius, 0, startAngle, endAngle);

                        startAngle = endAngle;

                        var index = Items.IndexOf(data);
                        var arcClassName = $"rz-series-item-{index}";
                        var fill = PickColor(index, Fills);
                        var stroke = PickColor(index, Strokes);

                        <g class="@arcClassName">
                            @if (angle > 0)
                            {
                                <Path D="@d" Fill="@fill" StrokeWidth="@StrokeWidth" Stroke="@stroke" />
                            }
                        </g>
                    }
                }
                else
                {
                    var arcClassName = $"rz-series-item-0";
                    var d = Segment(x, y, radius, radius - 1, -90, 270);
                    var fill = PickColor(0, Fills);
                    var stroke = PickColor(0, Strokes);
                    <g class="@arcClassName">
                        <Path D="@d" Fill="@fill" StrokeWidth="@StrokeWidth" Stroke="@stroke" />
                    </g>
                }
        </g>;
    }
}
